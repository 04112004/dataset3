# -*- coding: utf-8 -*-
"""codsoft task3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N-KEcma8muwxj4N_Q8IxeIKHT1s9_3tX
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

df = pd.read_csv('/content/advertising.csv')
df

df.head()

df.tail()

df.shape

df.describe()

df.info()

df.isna().sum()

df.duplicated()

sns.scatterplot(x=df['TV'],y=df['Sales'])
plt.show()

plt.scatter(df['Radio'],df['Sales'],color = 'g')
plt.xlabel('Ratio')
plt.ylabel('Sales')
plt.show()

plt.scatter(x=df['Newspaper'],y=df['Sales'],color = 'r')
plt.show()

sns.lmplot(x='TV',y='Sales',data = df)
sns.lmplot(x='Radio',y='Sales',data =df)
sns.lmplot(x='Newspaper',y='Sales',data = df)

plt.figure(figsize=(10, 7))

plt.subplot(221)
plt.hist(df['TV'],color = 'y')
plt.title('TV')

plt.subplot(222)
plt.hist(df['Radio'],color = 'g')
plt.title('Radio')

plt.subplot(223)
plt.hist(df['Newspaper'],color = 'r')
plt.title('Newspaper')

plt.subplot(224)
plt.hist(df['Sales'],color = 'b')
plt.title('Sales')

plt.show()

sns.heatmap(df.corr(),annot=True,fmt='.2f')
plt.title('Correlation of advertising mediums with sales')
plt.show()

x=df[['TV']]
y=df[['Sales']]

x_train , x_test, y_train, y_test = train_test_split(x,y,test_size=0.2, random_state=0)

print(x_test)
print(y_test)

print(x_train)
print(y_train)

ML =LinearRegression()
ML.fit(x_train,y_train)

x_train_prediction = ML.predict(x_train)
print(x_train_prediction)

print(ML.coef_)
print(ML.intercept_)

x_test_prediction = ML.predict(x_test)
print(x_test_prediction)

plt.figure(figsize=(7,5))
plt.scatter(y_train,x_train_prediction)
plt.xlabel('Actual')
plt.ylabel('Predicted')
plt.title('Actual vs Predicted')
plt.show()

plt.figure(figsize=(7,5))
plt.scatter(y_test,x_test_prediction)
plt.xlabel('Actual')
plt.ylabel('Predicted')
plt.title('Actual vs Predicted')
plt.show()